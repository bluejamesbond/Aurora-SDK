////////////////////////////////////////////////////////////////////////////////
// GAURDS
////////////////////////////////////////////////////////////////////////////////

#ifndef __FRAME_H__
#define __FRAME_H__

//+-----------------------------------------------------------------------------
//
//  Class:
//      FRAME
//
//  Synopsis:
//      Differentiates which of the two possible arcs could match the given arc
//      parameters.
//
//------------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
// INCLUDE
////////////////////////////////////////////////////////////////////////////////

#include "../Core/AbstractFrame.h"
#include "Thread.h"
#include "Graphics.h"

namespace A2D {

	////////////////////////////////////////////////////////////////////////////////
	// DECLARATION
	////////////////////////////////////////////////////////////////////////////////

	class Frame : public AbstractFrame
	{

		////////////////////////////////////////////////////////////////////////////////
		// PLATFORM COMPATIBLE IMPLEMENTATION
		////////////////////////////////////////////////////////////////////////////////

	public:

		Frame();
		Frame(HINSTANCE xHInstance);
		~Frame();

	private:

		HINSTANCE aHInstance;

		////////////////////////////////////////////////////////////////////////////////
		// ABSTRACTFRAME
		////////////////////////////////////////////////////////////////////////////////

	protected:

		virtual STATUS					createPlatformCompatibleEventQueue(AbstractEventQueue ** xEventQueue);
		virtual STATUS					createPlatformCompatibleWindow(AbstractWindow ** xWindow);
		virtual STATUS					createPlatformCompatibleBackBuffer(AbstractBackBuffer ** xBackBuffer, AbstractWindow * xWindow, GXSettings * xSettings);
		virtual STATUS					createAndInitPlatformCompatibleGraphics(void ** xGraphics, AbstractBackBuffer * xBackbuffer);

	};
}
#endif
