////////////////////////////////////////////////////////////////////////////////
// GAURDS
////////////////////////////////////////////////////////////////////////////////

#ifndef __WINDOWEVENT_H__
#define __WINDOWEVENT_H__

//+-----------------------------------------------------------------------------
//
//  Class: 
//      WINDOWEVENT
//
//  Synopsis:
//      Event class for windows.
//
//------------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
// INCLUDE
////////////////////////////////////////////////////////////////////////////////


#include "ExtLibs.h"
#include "AbstractEvent.h"

using namespace std;

namespace A2D {

	////////////////////////////////////////////////////////////////////////////////
	// FORWARD DECLARATIONS
	////////////////////////////////////////////////////////////////////////////////
	
	class WindowListener;
	class AbstractEvent;
	class EventSource;

	////////////////////////////////////////////////////////////////////////////////
	// DECLARATION
	////////////////////////////////////////////////////////////////////////////////

	class WindowEvent : public AbstractEvent
	{
	public:

		WindowEvent(string  xString); //<- for testing
		WindowEvent(EventSource * xSource, int xEventID, string xString);
		virtual ~WindowEvent();

		void print() const;


	public:
		


	private:

		// Source and ID is in AbstractEvent.
		string					aWindowName;

	public:

		//////////////////////////////////////////////////////////
		// ABSTRACT IMPLEMENTATION
		//////////////////////////////////////////////////////////

		virtual HRESULT                 initialize();
		virtual LPCWSTR                 getClass();
		virtual LPCWSTR                 toString();

	};

}





#endif