////////////////////////////////////////////////////////////////////////////////
// GAURDS
////////////////////////////////////////////////////////////////////////////////

#ifndef __PIPELINE_H__
#define __PIPELINE_H__

//+-----------------------------------------------------------------------------
//
//  Class:
//      PIPELINE
//
//  Synopsis:
//      Differentiates which of the two possible arcs could match the given arc
//      parameters.
//
//------------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
// INCLUDE
////////////////////////////////////////////////////////////////////////////////

#include "ExtLibs.h"
#include "Common.h"

namespace A2D {

	////////////////////////////////////////////////////////////////////////////////
	// FORWARD DECLARATIONS
	////////////////////////////////////////////////////////////////////////////////

	class Abstract;
	class Pipelineable;

	////////////////////////////////////////////////////////////////////////////////
	// DECLARATION
	////////////////////////////////////////////////////////////////////////////////

	class Pipeline
	{

	public:

		Pipeline();

		~Pipeline();

		void				  *			aPipelineComps[8];
		int							    aLength = 0;
		int								aLifeCycle = 0;
		static int						aGlobalLifeCycle;

		static void						nextLifeCycle();

	public:

		virtual HRESULT                 initialize();

	};
}

#endif
